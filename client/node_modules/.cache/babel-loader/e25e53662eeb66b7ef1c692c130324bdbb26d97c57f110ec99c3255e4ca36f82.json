{"ast":null,"code":"var _jsxFileName = \"D:\\\\apply-assignment\\\\valyx-assignment\\\\client\\\\src\\\\components\\\\BankStatementUploader\\\\BankStatementUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './bankStatementUploader.scss';\n// import axios from 'axios';\nimport axiosInstance from '../../axios/axiosInstances';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BankStatementUploader = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n  };\n  const handleUpload = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      const response = await axiosInstance.post('/upload-csv', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (response.status === 201) {\n        alert('CSV file uploaded successfully');\n        setFile(null);\n      }\n    } catch (error) {\n      console.error('Error uploading CSV:', error);\n      alert('Error uploading CSV. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bank-statement\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Bank Statement CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(BankStatementUploader, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = BankStatementUploader;\nexport default BankStatementUploader;\nvar _c;\n$RefreshReg$(_c, \"BankStatementUploader\");","map":{"version":3,"names":["React","useState","axiosInstance","jsxDEV","_jsxDEV","BankStatementUploader","_s","file","setFile","handleFileChange","e","selectedFile","target","files","handleUpload","formData","FormData","append","response","post","headers","status","alert","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/apply-assignment/valyx-assignment/client/src/components/BankStatementUploader/BankStatementUploader.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport './bankStatementUploader.scss'\r\n// import axios from 'axios';\r\nimport axiosInstance from '../../axios/axiosInstances';\r\n\r\nconst BankStatementUploader = () => {\r\n\r\n    const [file, setFile] = useState(null);\r\n    const handleFileChange = (e) => {\r\n        const selectedFile = e.target.files[0];\r\n        setFile(selectedFile);\r\n      };\r\n\r\n      const handleUpload = async () => {\r\n        try {\r\n          const formData = new FormData();\r\n          formData.append('file', file);\r\n    \r\n          const response = await axiosInstance.post('/upload-csv', formData, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data',\r\n            },\r\n          });\r\n    \r\n          if (response.status === 201) {\r\n            alert('CSV file uploaded successfully');\r\n            setFile(null);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error uploading CSV:', error);\r\n          alert('Error uploading CSV. Please try again later.');\r\n        }\r\n      };\r\n\r\n      return(\r\n        <div className='bank-statement'>\r\n          <h2>Upload Bank Statement CSV</h2>\r\n          <input type=\"file\" accept=\".csv\" onChange={handleFileChange} />\r\n          {file && (\r\n            <div>\r\n              <button onClick={handleUpload}>Upload</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default BankStatementUploader"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,8BAA8B;AACrC;AACA,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMQ,gBAAgB,GAAIC,CAAC,IAAK;IAC5B,MAAMC,YAAY,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACtCL,OAAO,CAACG,YAAY,CAAC;EACvB,CAAC;EAED,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEV,IAAI,CAAC;MAE7B,MAAMW,QAAQ,GAAG,MAAMhB,aAAa,CAACiB,IAAI,CAAC,aAAa,EAAEJ,QAAQ,EAAE;QACjEK,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAIF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;QAC3BC,KAAK,CAAC,gCAAgC,CAAC;QACvCd,OAAO,CAAC,IAAI,CAAC;MACf;IACF,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CD,KAAK,CAAC,8CAA8C,CAAC;IACvD;EACF,CAAC;EAED,oBACElB,OAAA;IAAKqB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BtB,OAAA;MAAAsB,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClC1B,OAAA;MAAO2B,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,MAAM;MAACC,QAAQ,EAAExB;IAAiB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC9DvB,IAAI,iBACHH,OAAA;MAAAsB,QAAA,eACEtB,OAAA;QAAQ8B,OAAO,EAAEpB,YAAa;QAAAY,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEd,CAAC;AAAAxB,EAAA,CAxCKD,qBAAqB;AAAA8B,EAAA,GAArB9B,qBAAqB;AA0C3B,eAAeA,qBAAqB;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}